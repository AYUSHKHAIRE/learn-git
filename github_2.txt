# part 2

#add a remote server
git remote add origin https://github.com/AYUSHKHAIRE/learn-git.git
remote name is origin 

# to see commands for fetch and push
git remote -v
# now my git know it is my server 

# now push it
git push -u  [server name ] [ branch ]  

use SSH for authentication 

ssh-keygen -t ed25519 -C "email@example.com"

view keys
cd /home/[username]/.ssh/
cat id_ed25519.pub
ssh-ed25519 [public key] [email]

see a branch
git branch 

make a new branch
git branch name 

go to a branch 
git checkout branchname 

publish branch on repo
git push --set-upstream [server] [branch]


rebase 
in merge , if we start a branch and then merge after some commits ,
if we merge , we will loose the commit history after merging . 

to avoid this ,
there is a method rebasing
in which we do like we just add the head of new branch to the end of original branch .

but merge is better as for short history 

add and commit in a branch 
git commit -a -m "commit1"
git rebase branch4 [target branch]

#stashing 
if somebody changed code on server 
but you dont wish to chang and commit your code on local 
but you still wish code on server also with uot any commit 
you will do git stash 
because in this case i dont want to add and commit local changes .

so , git stash will save server changes in temprory directory 
git stash 
after changes 
do git pull 
now apply my changes again 
git stash apply

it just maintained a stack 